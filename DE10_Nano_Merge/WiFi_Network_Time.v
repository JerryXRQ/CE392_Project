
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module WiFi_Network_Time(

	//////////// CLOCK //////////
	input 		          		FPGA_CLK1_50,
	input 		          		FPGA_CLK2_50,
	input 		          		FPGA_CLK3_50,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [7:0]		LED,

	//////////// SW //////////
	input 		     [3:0]		SW,

	//////////// GPIO, GPIO connect to RFS - RF and Sensor //////////
	inout 		          		BT_KEY,
	input 		          		BT_UART_RX,
	output		          		BT_UART_TX,
	input 		          		LSENSOR_INT,
	inout 		          		LSENSOR_SCL,
	inout 		          		LSENSOR_SDA,
	inout 		          		MPU_AD0_SDO,
	output		          		MPU_CS_n,
	output		          		MPU_FSYNC,
	input 		          		MPU_INT,
	inout 		          		MPU_SCL_SCLK,
	inout 		          		MPU_SDA_SDI,
	input 		          		RH_TEMP_DRDY_n,
	inout 		          		RH_TEMP_I2C_SCL,
	inout 		          		RH_TEMP_I2C_SDA,
	inout 		     [7:0]		TMD_D,
	input 		          		UART2USB_CTS,
	output		          		UART2USB_RTS,
	input 		          		UART2USB_RX,
	output		          		UART2USB_TX,
	output		          		WIFI_EN,
	output		          		WIFI_RST_n,
	input 		          		WIFI_UART0_CTS,
	output		          		WIFI_UART0_RTS,
	input 		          		WIFI_UART0_RX,
	output		          		WIFI_UART0_TX,
	input 		          		WIFI_UART1_RX,


	//////////// HDMI //////////
	inout 		          		HDMI_I2C_SCL,
	inout 		          		HDMI_I2C_SDA,
	inout 		          		HDMI_I2S,
	inout 		          		HDMI_LRCLK,
	inout 		          		HDMI_MCLK,
	inout 		          		HDMI_SCLK,
	output		          		HDMI_TX_CLK,
	output		          		HDMI_TX_DE,
	output		    [23:0]		HDMI_TX_D,
	output		          		HDMI_TX_HS,
	input 		          		HDMI_TX_INT,
	output		          		HDMI_TX_VS,

	//////////// GPIO_0, GPIO connect to D8M-GPIO //////////
	inout 		          		CAMERA_I2C_SCL,
	inout 		          		CAMERA_I2C_SDA,
	output		          		CAMERA_PWDN_n,
	output		          		MIPI_CS_n,
	inout 		          		MIPI_I2C_SCL,
	inout 		          		MIPI_I2C_SDA,
	output		          		MIPI_MCLK,
	input 		          		MIPI_PIXEL_CLK,
	input 		     [9:0]		MIPI_PIXEL_D,
	input 		          		MIPI_PIXEL_HS,
	input 		          		MIPI_PIXEL_VS,
	output		          		MIPI_REFCLK,
	output		          		MIPI_RESET_n

);

// Y.X.
//reg [3:0] LED_local;



//=======================================================
//  REG/WIRE declarations
//=======================================================
wire pio_wifi_reset;
wire [11:0] x;
wire [11:0] y;
wire [11:0] width;
wire [11:0] height;

//wire HEX0_DP, HEX1_DP, HEX2_DP, HEX3_DP, HEX4_DP, HEX5_DP;

//=======================================================
//  Structural coding
//=======================================================

assign WIFI_RST_n = KEY[0] & pio_wifi_reset;
assign WIFI_EN = 1'b1;

assign LED[6] = ~WIFI_UART0_TX;
assign LED[7] = ~WIFI_UART0_RX;

assign UART2USB_TX = ((SW[0] == 1'b0)? WIFI_UART0_RX: WIFI_UART0_TX);

RFS_WiFi u0(
        .clk_clk(FPGA_CLK1_50),                                        //                                clk.clk
        .reset_reset_n(KEY[0]),                                         //                              reset.reset_n
        .pio_key_external_connection_export(KEY[1]),                    //            key_external_connection.export

        .wifi_uart0_external_connection_rxd(WIFI_UART0_RX),             //     wifi_uart0_external_connection.rxd
        .wifi_uart0_external_connection_txd(WIFI_UART0_TX),             //                                   .txd
        .wifi_uart0_external_connection_cts_n(WIFI_UART0_CTS),          //                                   .cts_n
        .wifi_uart0_external_connection_rts_n(WIFI_UART0_RTS),          //                                   .rts_n

        //.seg7_if_0_conduit_end_export({HEX5, HEX4,
        //                               HEX3, HEX2,
        //                               HEX1, HEX0}),                    //              seg7_if_0_conduit_end.export

        .pio_wifi_reset_external_connection_export(pio_wifi_reset),     // pio_wifi_reset_external_connection.export
        .pio_led_external_connection_export(LED[3: 0]),                 //        pio_led_external_connection.export
		.pio_x_external_connection_export(x),
		.pio_y_external_connection_export(y),
		.pio_width_external_connection_export(width),
		.pio_height_external_connection_export(height)
	);


painting_top pt(

			//////////// CLOCK //////////
			.FPGA_CLK1_50(FPGA_CLK1_50),
			.FPGA_CLK2_50(FPGA_CLK2_50),
			.FPGA_CLK3_50(FPGA_CLK3_50),
			//////////// HDMI //////////
			.HDMI_I2C_SCL(HDMI_I2C_SCL),
			.HDMI_I2C_SDA(HDMI_I2C_SDA),
			.HDMI_I2S(HDMI_I2S),
			.HDMI_LRCLK(HDMI_LRCLK),
			.HDMI_MCLK(HDMI_MCLK),
			.HDMI_SCLK(HDMI_SCLK),
			.HDMI_TX_CLK(HDMI_TX_CLK),
			.HDMI_TX_DE(HDMI_TX_DE),
			.HDMI_TX_D(HDMI_TX_D),
			.HDMI_TX_HS(HDMI_TX_HS),
			.HDMI_TX_INT(HDMI_TX_INT),
			.HDMI_TX_VS(HDMI_TX_VS),

			//////////// KEY //////////
			.KEY(KEY),

			//////////// LED //////////
//			.LED(LED_local),

			//////////// SW //////////
			.SW(SW),

			//////////// GPIO_0, GPIO connect to D8M-GPIO //////////
			.CAMERA_I2C_SCL(CAMERA_I2C_SCL),
			.CAMERA_I2C_SDA(CAMERA_I2C_SDA),
			.CAMERA_PWDN_n(CAMERA_PWDN_n),
			.MIPI_CS_n(MIPI_CS_n),
			.MIPI_I2C_SCL(MIPI_I2C_SCL),
			.MIPI_I2C_SDA(MIPI_I2C_SDA),
			.MIPI_MCLK(MIPI_MCLK),
			.MIPI_PIXEL_CLK(MIPI_PIXEL_CLK),
			.MIPI_PIXEL_D(MIPI_PIXEL_D),
			.MIPI_PIXEL_HS(MIPI_PIXEL_HS),
			.MIPI_PIXEL_VS(MIPI_PIXEL_VS),
			.MIPI_REFCLK(MIPI_REFCLK),
			.MIPI_RESET_n(MIPI_RESET_n),
			.center_x_out(x),
    		.center_y_out(y),
    		.width_out(width),
    		.height_out(height)
		);

endmodule
